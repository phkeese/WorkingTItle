[gd_scene load_steps=23 format=2]

[ext_resource path="res://scenes/game/game.gd" type="Script" id=1]
[ext_resource path="res://addons/multiplayer/NetworkGame.gd" type="Script" id=2]
[ext_resource path="res://scenes/player/player.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/ship.tscn" type="PackedScene" id=4]
[ext_resource path="res://addons/multiplayer/Sync.gd" type="Script" id=5]
[ext_resource path="res://assets/sprites/a490b0c1-47ef-405b-950b-88de941bfa08.__CR0,0,1500,1500_PT0_SX300_V1___.jpg" type="Texture" id=6]
[ext_resource path="res://assets/themes/new_theme.tres" type="Theme" id=7]
[ext_resource path="res://assets/sprites/flying-ship-airship-futuristic-ship-vector-clipart_csp81717309 (Custom).jpg" type="Texture" id=8]
[ext_resource path="res://assets/audio/Fun in a Bottle.mp3" type="AudioStream" id=9]
[ext_resource path="res://assets/fonts/main_font.tres" type="DynamicFont" id=10]
[ext_resource path="res://assets/fonts/small.tres" type="DynamicFont" id=11]

[sub_resource type="Curve" id=3]
_data = [ Vector2( 0, 0 ), 0.0, 1.0, 0, 1, Vector2( 1, 1 ), 1.0, 0.0, 1, 0 ]

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 1, 0, 0, 1 )

[sub_resource type="SphereMesh" id=1]

[sub_resource type="Shader" id=10]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.2.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 detail_scale;
uniform vec3 detail_offset;
uniform float factor : hint_range(0.0,1.0);
uniform float detail_angle;

varying vec2 detail_uv;

vec2 rotate(vec2 v, float a) {
	float s = sin(a);
	float c = cos(a);
	mat2 m = mat2(vec2(c, -s),vec2(s, c));
	return m * v;
}

void vertex() {
	detail_uv = UV*detail_scale.xy+detail_offset.xy;
	detail_uv = rotate(detail_uv, detail_angle);
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	vec4 detail_tex = texture(texture_albedo,detail_uv);
	
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALBEDO = mix(ALBEDO, detail_tex.rgb * albedo.rgb, factor);
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 30, 30, 30 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/detail_scale = Vector3( 50, 50, 50 )
shader_param/detail_offset = Vector3( 0, 0, 0 )
shader_param/factor = 0.0
shader_param/detail_angle = -2.552
shader_param/texture_albedo = ExtResource( 6 )

[sub_resource type="PlaneMesh" id=4]

[sub_resource type="Animation" id=6]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:uv1_offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/uv1_offset")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/detail_offset")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ) ]
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/factor")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=7]
resource_name = "Scroll"
length = 5.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/uv1_offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 3, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/detail_offset")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 10, 0, 0 ) ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("game/CameraContainer/Camera/Camera/Sea:material_override:shader_param/factor")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 2.5, 5 )
}

[sub_resource type="StyleBoxFlat" id=12]
bg_color = Color( 0, 0, 0, 1 )
expand_margin_left = 8.0
expand_margin_right = 8.0
expand_margin_top = 8.0
expand_margin_bottom = 8.0

[sub_resource type="ProceduralSky" id=8]
sun_latitude = 70.0
sun_longitude = 45.0

[sub_resource type="Environment" id=9]
background_mode = 2
background_sky = SubResource( 8 )

[node name="NetworkGame" type="Node"]
script = ExtResource( 2 )
port = 2455
ip = "gamedev.paulmethfessel.com"
player_scene = ExtResource( 3 )
players_container = NodePath("game/Players")

[node name="game" type="Spatial" parent="."]
script = ExtResource( 1 )
max_angle = 45.0
player_weight = 10.0
tilt_curve = SubResource( 3 )

[node name="Sync" type="Node" parent="game"]
script = ExtResource( 5 )
initial = PoolStringArray( "height" )
synced = PoolStringArray( "angle", "height", "game_time" )
process_only_network_master = true

[node name="Ship" parent="game" instance=ExtResource( 4 )]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="game"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 11.0173, 0 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 1 )
material/0 = null

[node name="Sync" type="Node" parent="game/MeshInstance"]
script = ExtResource( 5 )
unreliable_synced = PoolStringArray( "global_transform" )

[node name="Players" type="Spatial" parent="game"]

[node name="CameraContainer" type="Spatial" parent="game"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -14.852, 0, 0 )

[node name="Camera" type="Spatial" parent="game/CameraContainer"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 23.9463, 27.097, 0 )

[node name="Camera" type="Camera" parent="game/CameraContainer/Camera"]
near = 10.0
far = 130.0

[node name="Sea" type="MeshInstance" parent="game/CameraContainer/Camera/Camera"]
transform = Transform( 179.636, 0, 7.85214e-06, 7.85214e-06, 3.43228e-13, -179.636, 0, 179.636, 3.43228e-13, -9.094, 1.5245e-06, -54.8765 )
material_override = SubResource( 11 )
mesh = SubResource( 4 )
skeleton = NodePath("../../../..")
material/0 = null

[node name="AnimationPlayer" type="AnimationPlayer" parent="game/CameraContainer/Camera/Camera/Sea"]
root_node = NodePath("../../../../../..")
autoplay = "Scroll"
anims/RESET = SubResource( 6 )
anims/Scroll = SubResource( 7 )

[node name="DirectionalLight" type="DirectionalLight" parent="game/CameraContainer/Camera/Camera"]
transform = Transform( 0.707107, 0.579228, 0.40558, -0.707107, 0.579228, 0.40558, -8.10523e-08, -0.573576, 0.819152, 55.8883, 54.7327, -27.097 )
shadow_enabled = true

[node name="HUD" type="CanvasLayer" parent="game"]

[node name="Ingame" type="Control" parent="game/HUD"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PanelContainer" type="PanelContainer" parent="game/HUD/Ingame"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_top = 164.0
margin_right = 56.0
margin_bottom = 396.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="game/HUD/Ingame/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 49.0
margin_bottom = 225.0
theme = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="game/HUD/Ingame/PanelContainer/VBoxContainer"]
margin_right = 42.0
margin_bottom = 14.0
text = "Height"

[node name="Height" type="VSlider" parent="game/HUD/Ingame/PanelContainer/VBoxContainer"]
margin_top = 18.0
margin_right = 42.0
margin_bottom = 218.0
rect_min_size = Vector2( 0, 200 )
size_flags_horizontal = 1
custom_icons/grabber_disabled = ExtResource( 8 )
step = 0.1
value = 50.0
editable = false

[node name="Scoreboard" type="CenterContainer" parent="game/HUD/Ingame"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -20.0
margin_right = 1004.0
margin_bottom = 48.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="PanelContainer" parent="game/HUD/Ingame/Scoreboard"]
margin_left = 480.0
margin_right = 544.0
margin_bottom = 48.0
custom_styles/panel = SubResource( 12 )

[node name="Label" type="Label" parent="game/HUD/Ingame/Scoreboard/Panel"]
margin_right = 64.0
margin_bottom = 48.0
custom_colors/font_color = Color( 0.376471, 0.87451, 0, 1 )
custom_fonts/font = ExtResource( 10 )
text = "0 m"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Lobby" type="Control" parent="game/HUD"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PanelContainer" type="PanelContainer" parent="game/HUD/Lobby"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="game/HUD/Lobby/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 1017.0
margin_bottom = 593.0

[node name="VBoxContainer" type="VBoxContainer" parent="game/HUD/Lobby/PanelContainer/CenterContainer"]
margin_left = 325.0
margin_top = 226.0
margin_right = 685.0
margin_bottom = 360.0

[node name="Label" type="Label" parent="game/HUD/Lobby/PanelContainer/CenterContainer/VBoxContainer"]
margin_right = 360.0
margin_bottom = 48.0
custom_fonts/font = ExtResource( 10 )
text = "Steambird Willy"

[node name="Play" type="Button" parent="game/HUD/Lobby/PanelContainer/CenterContainer/VBoxContainer"]
margin_top = 52.0
margin_right = 360.0
margin_bottom = 82.0
focus_mode = 0
custom_fonts/font = ExtResource( 11 )
text = "Play!"

[node name="Score" type="Label" parent="game/HUD/Lobby/PanelContainer/CenterContainer/VBoxContainer"]
margin_top = 86.0
margin_right = 360.0
margin_bottom = 134.0
custom_fonts/font = ExtResource( 10 )
text = "0 m"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WorldEnvironment" type="WorldEnvironment" parent="game"]
environment = SubResource( 9 )

[node name="Music" type="AudioStreamPlayer" parent="game"]
stream = ExtResource( 9 )
autoplay = true
bus = "Music"

[node name="Lobby" type="CanvasLayer" parent="."]
pause_mode = 2
layer = 2

[connection signal="pressed" from="game/HUD/Lobby/PanelContainer/CenterContainer/VBoxContainer/Play" to="game" method="_on_Play_pressed"]
